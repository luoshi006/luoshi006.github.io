<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Learning on</title><link>https://luoshi006.github.io/docs/learning/</link><description>Recent content in Learning on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Fri, 03 Sep 2021 00:35:10 +0800</lastBuildDate><atom:link href="https://luoshi006.github.io/docs/learning/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://luoshi006.github.io/docs/learning/introduction/</link><pubDate>Fri, 03 Sep 2021 00:35:10 +0800</pubDate><guid>https://luoshi006.github.io/docs/learning/introduction/</guid><description>Learning 记录学习过程&amp;hellip;.
Traj Planning
Real-time Trajectory Optimization for Autonomous Vehicle Racing
一篇本科论文，从汽车模型开始，介绍了怎么建模，构建 QP 问题，线性化处理；比较全面，且有代码示例； 因为里面涉及到比较多 凸优化 的知识，所以深入阅读有门槛； Optimal Trajectory Generation for Dynamic Street Scenarios in a Frenet Frame
自动驾驶经典论文，介绍了 Frenet 坐标系 下的轨迹生成，并根据代价选择最优路径； 基于采样的方法实现，涉及一些多项式拟合的东西； 论文不是很友好，但代码比较清晰； Reactive Nonholonomic Trajectory Generation via Parametric Optimal Control
论文很难懂 主要贡献在于 三阶曲率多项式 的公式推导及求解 Apollo EM planner 引用过 spline
cubic_spline 简单描述了常见的 三次样条曲线</description></item><item><title>Traj Planning</title><link>https://luoshi006.github.io/docs/learning/traj_planning/20210903_traj_planning/</link><pubDate>Fri, 03 Sep 2021 00:35:10 +0800</pubDate><guid>https://luoshi006.github.io/docs/learning/traj_planning/20210903_traj_planning/</guid><description> Traj Planning Real-time Trajectory Optimization for Autonomous Vehicle Racing 一篇本科论文，从汽车模型开始，介绍了怎么建模，构建 QP 问题，线性化处理；比较全面，且有代码示例； 因为里面涉及到比较多 凸优化 的知识，所以深入阅读有门槛； Optimal Trajectory Generation for Dynamic Street Scenarios in a Frenet Frame 自动驾驶经典论文，介绍了 Frenet 坐标系 下的轨迹生成，并根据代价选择最优路径； 基于采样的方法实现，涉及一些多项式拟合的东西； 论文不是很友好，但代码比较清晰； Reactive Nonholonomic Trajectory Generation via Parametric Optimal Control 论文很难懂 主要贡献在于 三阶曲率多项式 的公式推导及求解 Apollo EM planner 引用过</description></item><item><title>RT Traj Optimization for Racing</title><link>https://luoshi006.github.io/docs/learning/traj_planning/20210903_rt_traj_optimization_for_racing/</link><pubDate>Fri, 03 Sep 2021 00:35:10 +0800</pubDate><guid>https://luoshi006.github.io/docs/learning/traj_planning/20210903_rt_traj_optimization_for_racing/</guid><description>refs: https://github.com/janismac/RacingTrajectoryOptimization
Summary 以赛道场景，构建了 QP 问题，求解在赛道上可行的轨迹。
QP 问题要求问题是线性的，且可行域是凸集；文章比较详细的介绍了线性化操作及构建凸集的方法； 可借鉴的东西有限，但是作为入门很不错； 术语 坐标系  $x,y$ Global 坐标系 $\xi, \eta$ Body 坐标系 $\psi$ Yaw angle $[a_{long}, a_{lat}]$ Body 系 加速度 $u = [a_x, a_y]$ Global 系 加速度 Model 在轨迹规划中，使用质心模型，只考虑质点加速度，能够使轨迹规划成为一个 线性优化 问题； 在自动驾驶场景中，汽车的控制通常由油门、方向盘、刹车实现。油门仅提供正向加速度；刹车提供减速度；方向盘改变前轮转向，从而将纵向加速度映射到横向。为方便控制，在 Tracking 过程中，分别实现了横纵向控制器。 轨迹优化中，需要考虑加速度限制。尤其是高速行驶过程中的空气影响。 Model Predictive Control 给定被控系统模型和输入，预测未来时刻的系统状态； 离散模型按 时间步长 迭代，就可以得到一段离散轨迹； Race Track Model 赛道模型由中心线 $C$ 和 赛道区域 $T$ 组成； progress function 进度 找到与车辆位置最近的 中心线点，return 从起点到当前 中心线点的弧长； Approximate Solutions 优化问题通常是非凸的，轨迹优化中最常见的非凸约束是非凸的可行区域。 Sequential Convex Programming &amp;ndash; Guess 初值 &amp;ndash; 在初值附近构造 QP 问题，求解局部最优解；</description></item><item><title>Optimal Trajectory in a Frenet Frame</title><link>https://luoshi006.github.io/docs/learning/traj_planning/20210916_optimal_traj_in_frenet_frame/</link><pubDate>Thu, 16 Sep 2021 13:56:35 +0800</pubDate><guid>https://luoshi006.github.io/docs/learning/traj_planning/20210916_optimal_traj_in_frenet_frame/</guid><description>Optimal Trajectory Generation for Dynamic Street Scenarios in a Frenet Frame Local Path Planning and Motion Control for AGV in Positioning https://github.com/ChenBohan/Robotics-Path-Planning-04-Quintic-Polynomial-Solver.git
Summary 常见的轨迹规划算法，想要得到最优轨迹，通常都需要动态障碍物的精确模型。文章中提出的是一种基于采样的反应式轨迹生成算法。根据路宽、速度范围、预测时间范围采样得到 大量轨迹，删除不可行轨迹后，根据代价进行排序，选择 最优轨迹 执行。
【注】代码比论文好懂
KeyPoints 采样频率的影响 过低的采样频率可能引起超调（下） Frenet 坐标系
对于轨迹上一点 reference，以 切线方向 $\vec{t}_r$ 和法线方向 $\vec{n}_x$ 建立坐标系；$d(t)$ 表示机器人偏离轨迹的距离，$s(t)$ 表示机器人行程。
图中，$\vec{t}_x, \vec{n}_x$ 仅用于表示机器人在 Frenet 坐标系的位姿；
Frenet 流程 Lateral Movement 起始状态 $[d_0, \dot{d_0}, \ddot{d_0}]$，沿用上一状态，保证运动连续性； 目标状态要求 $\dot{d_1} = \ddot{d_1} = 0$，以保证最终的沿线运动，即，</description></item><item><title>Reactive Nonholonomic Traj Gen</title><link>https://luoshi006.github.io/docs/learning/traj_planning/20210924_reactive_nonholonomic_traj_gen/</link><pubDate>Fri, 24 Sep 2021 17:25:10 +0800</pubDate><guid>https://luoshi006.github.io/docs/learning/traj_planning/20210924_reactive_nonholonomic_traj_gen/</guid><description>Reactive Nonholonomic Trajectory Generation via Parametric Optimal Control - - Alonzo Kelly, Bryan Nagy
https://github.com/lrm2017/SpiralsTrajactory.git https://github.com/jsford/PolyTraj.git https://github.com/berlala/Basic_SD_Algorithm.git Abstract 文章讨论了怎么实时生成一条轨迹，将轨迹问题建模成最优控制问题，进而转化为非线性优化问题。主要贡献在于 三阶曲率多项式 的公式推导及求解。
注：第二章介绍最优控制部分没看懂，对求解不影响，忽略；
【Keywords】Polynomial Spirals , Clothoids
Solution Using Polynomial Spirals 3.2 Clothoids 回旋曲线 定义其曲率为线性变化：
$$ \kappa (s) = a + bs$$
3.3 Polynomial Spirals 场景：已知起始点和终点的状态，求一条曲线
将曲率表示为 n 阶多项式，用以满足端点的约束条件；
3.4 Reduction to Decoupled Quadratures 多项式螺旋线可以通过封闭形式积分得到航向角 heading
$$ \begin{aligned} \kappa(s)&amp;amp;=a+bs+cs^2+ds^3 \newline \theta(s)&amp;amp;=\theta_0 + \int \kappa ds =\theta_0 + as+ \frac{bs^2}{2} + \frac{cs^3}{3}+ \frac{ds^4}{4} \end{aligned} \tag{1} $$</description></item><item><title>Cubic Spline</title><link>https://luoshi006.github.io/docs/learning/spline/20210917_cubic_spline/</link><pubDate>Fri, 17 Sep 2021 15:56:35 +0800</pubDate><guid>https://luoshi006.github.io/docs/learning/spline/20210917_cubic_spline/</guid><description>refs: https://mathworld.wolfram.com/CubicSpline.html
code: https://github.com/ChenBohan/Robotics-Path-Planning-04-Quintic-Polynomial-Solver/cubic_spline_planner.py
Summary 三次样条曲线由分段三次多项式组成，样条曲线依次穿过控制点 $m$ 。
不同的边界条件可以产生各种样条； &amp;ldquo;natural&amp;rdquo; 三次样条：终点处的二阶导数置为 $0$ 。
Flow 对于一维的情况，给定 $n+1$ 个控制点 $(y_0, y_1, &amp;hellip; , y_n)$ [Bartels et al.]，第 $i$ 段曲线表示为：
$$ Y_i(t) = a_i + b_i t + c_i t^2 + d_i t^3$$
其中，$t \in [0,1]$ ， $i=0, &amp;hellip;, n-1$
对于三阶多项式，构造如下方程组：
$$ \begin{aligned} Y_i(0) &amp;amp;= y_i = a_i \newline Y_i(1) &amp;amp;= y_{i+1} = a_i+b_i+c_i+d_i \newline Y'_i(0) &amp;amp;= D_i = b_i \newline Y_i(1)' &amp;amp;= D_{i + 1}=b_i+2 c_i +3 d_i \newline \end{aligned} $$</description></item></channel></rss>